#+PROPERTY: header-args:emacs-lisp :tangle (concat temporary-file-directory "early-init.el") :lexical t

開始之歬 加載之初 所用

#+begin_src emacs-lisp
  ;;; early-init.el --- Nasy's early-init.el  -*- lexical-binding: t; -*-

  ;;; Commentary:
  ;; Nasy's early-init.el

  ;;; Code:

  (setq
   ad-redefinition-action            'accept
   auto-mode-case-fold               nil
   fast-but-imprecise-scrolling      t
   ffap-machine-p-known              'reject
   gc-cons-percentage                1.0
   gc-cons-threshold                 most-positive-fixnum
   idle-update-delay                 1
   inhibit-compacting-font-caches    t
   inhibit-default-init              t
   inhibit-startup-message           t
   inhibit-startup-screen            t
   initial-major-mode                'fundamental-mode
   load-prefer-newer                 t
   native-comp-async-jobs-number     32
   package-enable-at-startup         nil
   read-process-output-max           #x10000
   redisplay-skip-fontification-on-input    t
   native-comp-async-report-warnings-errors 'silent)

  (setq initial-scratch-message
        (concat ";; Happy hacking, " user-login-name " - Emacs ♥ you!\n\n"))


  (let ((old-file-name-handler-alist file-name-handler-alist))

    (setq-default file-name-handler-alist nil)

    (defun nasy/restore-default ()
      "Restore gc setting to default."
      (setq file-name-handler-alist
            (delete-dups
             (append file-name-handler-alist
                     old-file-name-handler-alist))))

    (add-hook 'emacs-startup-hook #'nasy/restore-default))


  (set-language-environment "UTF-8")
  (setq selection-coding-system 'utf-8)


  (defconst *nasy* "20210525")

  (defconst *is-a-mac* (eq system-type 'darwin))

  (defconst *nasy-custom* (concat user-emacs-directory "芄蘭/"))
  (defconst *nasy-dir*    (concat user-emacs-directory "萚兮/"))
  (defconst *nasy-etc*    (concat *nasy-dir* "恆/"))
  (defconst *nasy-var*    (concat *nasy-dir* "旹/"))


  (when (boundp 'native-comp-eln-load-path)
    (add-to-list 'native-comp-eln-load-path (concat *nasy-var* "eln/")))


  (defvar *debug* (or (getenv-internal "DEBUG") init-file-debug))

  (defvar native-comp-deferred-compilation-deny-list nil)

  (defvar nasy--require nil
    "Require all packages.")

  (defvar nasy-pdump nil
    "Use pdump.")

  (setq async-byte-compile-log-file (concat *nasy-var* "async-bytecomp.log")
        debug-on-error    *debug*
        jka-compr-verbose *debug*)

  (defvar nasy-first-key-hook nil
    "The hook to run functions before press first key.")

  (provide 'early-init)
  ;;; early-init.el ends here
#+end_src
