#+PROPERTY: header-args:emacs-lisp :tangle (concat temporary-file-directory "譯.el") :lexical t

譯 el 至 elc 與 eln

#+begin_src emacs-lisp
  ;;; 譯.el ---  -*- lexical-binding: t; -*-

  ;;; Commentary:
  ;; 譯 el 至 elc 與 eln

  ;;; Code:

  (load (locate-user-emacs-file "early-init.el"))

  (setq load-prefer-newer t
        nasy--require t
        native-comp-deferred-compilation nil
        org-roam-v2-ack t)

  (message "\n\n---------------- Load el of 桃夭 ----------------\n\n")

  (load (locate-user-emacs-file "桃夭/擊鼓/擊鼓.el"))
  (load (locate-user-emacs-file "桃夭/風雨/風雨之包.el"))
  (load (locate-user-emacs-file "桃夭/緑衣/緑衣之包.el"))
  (load (locate-user-emacs-file "桃夭/日月/日月之包.el"))
  (load (locate-user-emacs-file "桃夭/月出/月出之包.el"))
  (load (locate-user-emacs-file "桃夭/麐之趾/麐之趾之包.el"))
  (load (locate-user-emacs-file "桃夭/庭燎/庭燎之包.el"))
  (load (locate-user-emacs-file "桃夭/小曐/小曐.el"))
  (load (locate-user-emacs-file "init.el"))

  (when (and (eq system-type 'darwin) (executable-find "cargo"))
    (shell-command (concat "make " (straight--build-dir "tsc") "tsc-dyn.dylib")))

  (message "\n\n---------------- Run hooks ----------------\n\n")

  (run-hooks
   'after-init-hook
   'emacs-startup-hook
   'nasy/config-before-hook
   'nasy/config-after-hook
   'nasy-first-key-hook
   'org-mode-hook
   'org-first-key-hook
   'prog-mode-hook
   'pre-command-hook)

  (message "\n\n---------------- Wait straight.el ----------------\n\n")

  (when (native-comp-available-p)
    (while (or comp-files-queue
               (> (comp-async-runnings) 0))
      (sleep-for 1)))

  (unless (and (boundp 'nasy-first-p)
               nasy-first-p)

    (message "\n\n---------------- Build elc of 桃夭 ----------------\n\n")
    (byte-recompile-directory (locate-user-emacs-file "桃夭/") 0)

    (when (native-comp-available-p)
      (message "\n\n---------------- Build eln of 桃夭 ----------------")
      (native-compile-async (locate-user-emacs-file "桃夭/") t)

      (setq native-comp-async-query-on-exit t)

      (while (or comp-files-queue
                 (> (comp-async-runnings) 0))
        (sleep-for 1))))

  (provide '譯)
  ;;; 譯.el ends here
#+end_src
