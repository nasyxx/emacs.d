* Packages

#+begin_src elisp
  (nasy/s-u-p flycheck
              flycheck-package)
  (when *flycheck-inline*
    (nasy/s-u-p quick-peek
                flycheck-inline))
#+end_src

* Autoloads

#+begin_src elisp
  ;;;###autoload
  (defun save-buffer-maybe-show-errors ()
    "Save buffer and show errors if any."
    (interactive)
    (save-buffer)
    (when (not flycheck-current-errors)
      (flycheck-list-errors)))
#+end_src

* Configs

#+begin_src elisp
  (use-package flycheck
    :commands (flycheck-mode
               flycheck-next-error
               flycheck-previous-error
               flycheck-add-next-checker
               save-buffer-maybe-show-errors)
    ;; :bind (("C-x C-s" . save-buffer-maybe-show-errors))
    :hook ((prog-mode . flycheck-mode))
    :init (gsetq flycheck-display-errors-function
                 #'flycheck-display-error-messages-unless-error-list
                 flycheck-check-syntax-automatically '(save idle-change mode-enabled)
                 flycheck-display-errors-delay       0.25)
    :general
    (:keymaps 'flycheck-error-list-mode-map
              "C-n" #'flycheck-error-list-next-error
              "C-p" #'flycheck-error-list-previous-error
              "RET" #'flycheck-error-list-goto-error
              [return]  #'flycheck-error-list-goto-error)
    :config (defalias 'show-error-at-point-soon
              'flycheck-show-error-at-point)
    (add-to-list 'flycheck-emacs-lisp-checkdoc-variables 'sentence-end-double-space))

  (use-package flycheck-package
    :after flycheck
    :init
    (after! elisp-mode
      (flycheck-package-setup)))

  (use-package flycheck-inline
    :defer t
    :preface
    (defun nasy/flycheck-inline-init ()
      "Flycheck-inline-mode init function"
      (gsetq flycheck-inline-display-function
             (lambda (msg pos)
               (let* ((ov (quick-peek-overlay-ensure-at pos))
                      (contents (quick-peek-overlay-contents ov)))
                 (setf (quick-peek-overlay-contents ov)
                       (concat contents (when contents "\n") msg))
                 (quick-peek-update ov)))
             flycheck-inline-clear-function #'quick-peek-hide))
    :ghook 'flycheck-mode-hook
    :gfhook 'nasy/flycheck-inline-init)
#+end_src
