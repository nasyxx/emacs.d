#+PROPERTY: header-args:elisp :tangle (concat temporary-file-directory "nasy-langs-tempo.el")

* Header                                                 :noexport:

#+begin_src elisp
  ;;; nasy-langs-tempo.el --- Nasy's Emacs Configuration language file.  -*- lexical-binding: t; -*-

  ;; Copyright (C) 2020  Nasy

  ;; Author: Nasy <nasyxx@gmail.com>

  ;;; Commentary:

  ;; Nasy's Emacs Configuration Languages Templates.

  ;;; Code:
#+end_src

* Autoloads                                               :builtin:

#+begin_src elisp
  (leaf tempo
    :tag "builtin"
    :commands tempo-define-template)
#+end_src

** Haskell

#+begin_src elisp
  ;;;###autoload
  (defun nasy/tempo-haskell ()
    "Nasy haskell tempo."
    (tempo-define-template
     "hs-header"
     '("--------------------------------------------------------------------------------" n>
       "-- |" n>
       "-- Filename    : " (file-name-nondirectory (buffer-file-name)) n>
       "-- Project     : " (file-name-nondirectory (directory-file-name (or projectile-project-root default-directory))) n>
       "-- Author      : Nasy" n>
       "-- Module      : " n>
       "-- License     : GPL-3.0+" n>
       "-- Maintainer  : Nasy <nasyxx+haskell@gmail.com>" n>
       "-- Description : " n>
       "--" n>
       "-- > Haskell ♡ Nasy." n>
       "-- >-----------------------------------------------" n>
       "-- >             *         *" n>
       "-- >                  .                ." n>
       "-- >           .                               登" n>
       "-- >     *                      ," n>
       "-- >                   .                       至" n>
       "-- >" n>
       "-- >                               *           恖" n>
       "-- >          |\\___/|" n>
       "-- >          )    -(             .            聖·" n>
       "-- >         =\\ -   /=" n>
       "-- >           )===(       *" n>
       "-- >          /   - \\" n>
       "-- >          |-    |" n>
       "-- >         /   -   \\     0.|.0" n>
       "-- >  NASY___\\__( (__/_____(\\=/)__+1s____________" n>
       "-- >  ______|____) )______|______|______|______|_" n>
       "-- >  ___|______( (____|______|______|______|____" n>
       "-- >  ______|____\\_|______|______|______|______|_" n>
       "-- >  ___|______|______|______|______|______|____" n>
       "-- >  ______|______|______|______|______|______|_" n>
       "-- >  ___|______|______|______|______|______|____" n>
       "-- > ----------------------------------------------" n>
       "--" n>
       "--" n>
       "--" n>
       "--" n>
       "--------------------------------------------------------------------------------" n>))
    (define-abbrev haskell-mode-abbrev-table "hsh" "" 'tempo-template-hs-header))
#+end_src

** Python

#+begin_src elisp
  ;;;###autoload
  (defun nasy/tempo-python ()
    "Nasy python tempo."
    (tempo-define-template
     "py-header"
     '("#!/usr/bin/env python" n>
       "# -*- coding: utf-8 -*-" n n>
       "r\"\"\"" n>
       "Python ♡ Nasy." n n>
       "    |             *         *" n>
       "    |                  .                ." n>
       "    |           .                              登" n>
       "    |     *                      ," n>
       "    |                   .                      至" n>
       "    |" n>
       "    |                               *          恖" n>
       "    |          |\\___/|" n>
       "    |          )    -(             .           聖 ·" n>
       "    |         =\\ -   /=" n>
       "    |           )===(       *                  " n>
       "    |          /   - \\" n>
       "    |          |-    |                         " n>
       "    |         /   -   \\     0.|.0" n>
       "    |  NASY___\\__( (__/_____(\\=/)__+1s____________" n>
       "    |  ______|____) )______|______|______|______|_" n>
       "    |  ___|______( (____|______|______|______|____" n>
       "    |  ______|____\\_|______|______|______|______|_" n>
       "    |  ___|______|______|______|______|______|____" n>
       "    |  ______|______|______|______|______|______|_" n>
       "    |  ___|______|______|______|______|______|____" n n>
       "author   : Nasy https://nasy.moe" n>
       "date     : " (format-time-string "%b %e, %Y") n>
       "email    : Nasy <nasyxx+python@gmail.com>" n>
       "filename : " (file-name-nondirectory (buffer-file-name)) n>
       "project  : " (file-name-nondirectory (directory-file-name (or projectile-project-root default-directory))) n>
       "license  : GPL-3.0+" n n> p n>
       "\"\"\"" n>))

    (define-abbrev python-mode-abbrev-table "pyh" "" 'tempo-template-py-header))
#+end_src

* Footer                                                 :noexport:

#+begin_src elisp
  (provide 'nasy-langs-tempo)
  ;;; nasy-langs-tempo.el ends here
#+end_src
