#+PROPERTY: header-args:elisp :tangle (concat temporary-file-directory "nasy-app.el")

* Header                                                              :noexport:

#+begin_src elisp
  ;;; nasy-app.el --- Nasy's Emacs Configuration applications.  -*- lexical-binding: t; -*-

  ;; Copyright (C) 2020  Nasy

  ;; Author: Nasy <nasyxx@gmail.com>

  ;;; Commentary:

  ;; Nasy's Emacs Configuration Applications.

  ;;; Code:
#+end_src

* Configs

** Emacs Rime                            :convenience:inputmethod:

RIME ㄓ in Emacs

https://github.com/DogLooksGood/emacs-rime

#+begin_src elisp
  (leaf rime
    :doc "RIME ㄓ in Emacs"
    :url "https://github.com/DogLooksGood/emacs-rime"
    :tag "convenience" "input-method"
    :bind
    (:rime-mode-map
     ("C-`"   . rime-send-keybinding)
     ("C-S-`" . rime-send-keybinding)
     ("C-,"   . rime-send-keybinding))
    (:rime-active-mode-map
     ("C-;"   . rime-send-keybinding)
     ("C-SPC" . rime-send-keybinding))
    :custom
    `(rime-librime-root    . ,(expand-file-name "~/.nix-profile"))
    `(rime-user-data-dir   . ,(expand-file-name "~/.config/rime"))
    (rime-candidate-labels .'("〡" "〢" "〣" "〤" "〥" "〦" "〧" "〨" "〩"))
    (default-input-method  . "rime")
    (rime-cursor           . "˰")
    (rime-show-candidate   . 'posframe)
    (rime-posframe-style   . 'vertical)
    (rime-show-preedit     . t)
    (rime-translate-keybindings
     . '("C-f"
         "C-b"
         "C-n"
         "C-p"
         "C-g"
         "C-`"
         "C-;"
         "C-SPC"
         "<left>"
         "<right>"
         "<up>"
         "<down>"
         "<prior>"
         "<next>"
         "<delete>")))
#+end_src

** mu4e

#+begin_src elisp
  (leaf mu4e
    :disabled t
    :init
    (let ((straight-current-profile 'pinned))
      (straight-use-package
       '(mu4e
         :pre-build (("./autogen.sh") ("make" "-j"))
         :files (:defaults "mu4e/*.el")))
      (add-to-list 'straight-x-pinned-packages
                   '("mu4e" . "76734e9d0e16f95c1e95817dafad266c8de68fd5")))
    :custom
    (mu4e-attachment-dir . "~/Downloads/mails")
    (mu4e-mu-home        . "~/.config/mu")
    `(mu4e-mu-binary . ,(expand-file-name "mu/mu" (straight--repos-dir "mu"))))
#+end_src

** telega

#+begin_src elisp
  (leaf telega
    :custom
    `(telega-directory . ,(expand-file-name "~/.config/telega"))
    `(telega-server-libs-prefix . ,(expand-file-name "~/.nix-profile"))

    (telega-use-images        . t))
    ;; (telega-emoji-font-family . "Apple Color Emoji"))
#+end_src

** vterm                                               :terminals:

Emacs libvterm integration

https://github.com/akermu/emacs-libvterm

*** vterm-toggle                                      :terminals:

Toggles between the vterm buffer and whatever buffer you are editing.

https://github.com/jixiuf/vterm-toggle

#+begin_src elisp
  (leaf vterm-toggle
    :doc "Toggles between the vterm buffer and whatever buffer you are editing."
    :url "https://github.com/jixiuf/vterm-toggle"
    :tag "terminals"
    :bind (("C-<f2>" . vterm-toggle)
           (:vterm-mode-map
            ("s-n" . vterm-toggle-forward)
            ("s-p" . vterm-toggle-backward)))
    :custom (vterm-toggle-fullscreen-p . nil)
    :init (add-to-list 'display-buffer-alist
                    '((lambda(bufname _) (with-current-buffer bufname (equal major-mode 'vterm-mode)))
                      (display-buffer-reuse-window display-buffer-in-side-window)
                      (side . bottom)
                      (dedicated . t) ;dedicated is supported in emacs27
                      (reusable-frames . visible)
                      (window-height . 0.3))))
#+end_src

* Footer                                                              :noexport:

#+begin_src elisp
  (provide 'nasy-app)
  ;;; nasy-app.el ends here
#+end_src
